1.Chat Server: Viết chương trình chatroom server nhận tham số cổng từ
dòng lệnh, nghe và phục vụ các client làm việc sau:
- Nhận kết nối từ client, và vào vòng lặp hỏi tên client cho
đến khi client gửi đúng cú pháp:
“client_id: xxxxxxxx”
trong đó xxxxxxx là tên

- Sau đó vào vòng lặp nhận dữ liệu từ một client và gửi dữ
liệu đó đến các client còn lại ví dụ: client có id “abc” gửi
“xin chào” thì các client khác sẽ nhận được:

“abc: xin chao”

hoặc có thể thêm thời gian vào trước ví dụ:

“2014/05/06

11:00:00PM abc: xin chao”

2. TelnetServer: Viết một chương trình telnet server (mytelnets) làm nhiệm vụ sau:
• Đợi kết nối ở cổng được truyền vào từ tham số dòng lệnh, ví dụ: “mytelnets
5000” thì đợi ở cổng 5000.
• Khi đã kết nối với 1 client nào đó, yêu cầu client gửi user và pass, so sánh với
file cơ sở dữ liệu là một file text, mỗi dòng chứa một cặp user + pass ví dụ:
“admin admin
guest nopass
...”
	– Nếu so sánh sai thì báo lỗi đăng nhập
	– Nếu đúng thì đợi lệnh từ client, thực hiện lệnh và trả kết quả cho client
• Dùng hàm system(“dir c:\temp > c:\\temp\\out.txt”) để thực hiện lệnh
	– dir c:\temp là ví dụ lệnh dir mà client gửi
	– > c:\\temp\\out.txt để định hướng lại dữ liệu ra từ lệnh dir, khi đó kết quả lệnh dir
sẽ được ghi vào file văn bản

• Chú ý: Nếu nhiều client kết nối thì file out.txt có thể bị xung đột truy nhập, do
đó nên dùng EnterCriticalSection và LeaveCriticalSection để tránh xung đột
• Sử dụng Thread để server có thể xử lý nhiều thao tác, nhiều kết nối.